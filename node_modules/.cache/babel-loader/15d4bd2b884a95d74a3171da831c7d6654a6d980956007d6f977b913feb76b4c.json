{"ast":null,"code":"var _jsxFileName = \"/Users/jb10/Documents/SENG-Phase2/Project/SENG-Phase2-Project/src/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const [formData, setFormData] = useState({\n    id: \"\",\n    image: \"\",\n    name: \"\"\n  });\n  const [shows, setShows] = useState([]);\n  //since the id values are the same as the keys in formData, we can write an abstract setFormData here\n  function handleChange(event) {\n    setFormData({\n      ...formData,\n      [event.target.id]: event.target.value\n    });\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"http://localhost:3000/showData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Show ID\",\n      id: \"id\",\n      value: formData.id,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add an Image URL\",\n      id: \"image\",\n      value: formData.image,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Show\",\n      id: \"name\",\n      value: formData.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n_s(Form, \"vmie9AK21q0Baj5HQDI66h0Po04=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","_s","formData","setFormData","id","image","name","shows","setShows","handleChange","event","target","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jb10/Documents/SENG-Phase2/Project/SENG-Phase2-Project/src/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form() {\n    const [formData, setFormData] = useState({\n      id: \"\",\n      image: \"\",\n      name: \"\"\n    });\n  \n    const [shows, setShows] = useState([]);\n    //since the id values are the same as the keys in formData, we can write an abstract setFormData here\n    function handleChange(event) {\n      setFormData({\n        ...formData,\n        [event.target.id]: event.target.value,\n      });\n    }\n    function handleSubmit(event) {\n        event.preventDefault();\n        fetch(\"http://localhost:3000/showData\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        });\n      }\n    \n    return (\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Show ID\"\n          id=\"id\"\n          value={formData.id}\n          onChange={handleChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Add an Image URL\"\n          id=\"image\"\n          value={formData.image}\n          onChange={handleChange}\n        />\n         <input\n          type=\"text\"\n          placeholder=\"Show\"\n          id=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n        />\n        <input type=\"submit\"/>\n      </form>\n      \n    );\n  }\n\n  \n\n    export default Form;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,EAAE,EAAE,EAAE;IACNC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA,SAASY,YAAYA,CAACC,KAAK,EAAE;IAC3BP,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACQ,KAAK,CAACC,MAAM,CAACP,EAAE,GAAGM,KAAK,CAACC,MAAM,CAACC;IAClC,CAAC,CAAC;EACJ;EACA,SAASC,YAAYA,CAACH,KAAK,EAAE;IACzBA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtBC,KAAK,CAAC,gCAAgC,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ;IAC/B,CAAC,CAAC;EACJ;EAEF,oBACEH,OAAA;IAAMsB,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBAC3BvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,eAAe;MAC3BpB,EAAE,EAAC,IAAI;MACPQ,KAAK,EAAEV,QAAQ,CAACE,EAAG;MACnBqB,QAAQ,EAAEhB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACF9B,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,kBAAkB;MAC9BpB,EAAE,EAAC,OAAO;MACVQ,KAAK,EAAEV,QAAQ,CAACG,KAAM;MACtBoB,QAAQ,EAAEhB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACD9B,OAAA;MACCwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,MAAM;MAClBpB,EAAE,EAAC,MAAM;MACTQ,KAAK,EAAEV,QAAQ,CAACI,IAAK;MACrBmB,QAAQ,EAAEhB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACF9B,OAAA;MAAOwB,IAAI,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAGX;AAAC5B,EAAA,CArDMD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAyDT,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}